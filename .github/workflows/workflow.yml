name: Build and test 

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_call:
    inputs:
      rust-version:
        type: string
        required: false
        default: nightly

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: edgedb/setup-edgedb@v1
      with:
        cli-version: nightly
    - name: Cache cargo compilation
      uses: actions/cache@v3
      with:
        path: ./target
    - name: init project
      run: edgedb project info
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ inputs.rust-version }}
        override: true
        components: rustfmt, clippy
    - name: Set up cargo cache
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/            
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-
    - name: Lint
      run: |
        cargo fmt --all -- --check
        cargo clippy -- -D warnings          
    - name: Install cargo check tools
      run: |
        cargo install --locked cargo-deny || true
        cargo install --locked cargo-outdated || true
        cargo install --locked cargo-udeps || true
        cargo install --locked cargo-audit || true
        cargo install --locked cargo-pants || true          
    - name: Check
      run: |
        cargo deny check
        cargo outdated --exit-code 1
        cargo udeps
        rm -rf ~/.cargo/advisory-db
        cargo audit
        cargo pants          
    - name: Test
      run: cargo test
